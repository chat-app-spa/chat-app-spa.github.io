{"version":3,"sources":["components/ModalComp.js","components/InputComp.js","components/Messages.js","App.js","serviceWorker.js","index.js","App.module.scss"],"names":["ModalComp","visible","user","modalRef","inputRef","setUser","socket","setVisible","title","style","zIndex","maskClosable","closable","footer","className","classes","modalInput","type","value","onChange","e","target","placeholder","ref","onKeyDown","key","length","current","focus","modalBtn","onClick","disabled","InputComp","input","setInput","width","inputMsg","emit","msg","inputBtn","Messages","paddingBottom","map","each","index","messages","other","userMsg","otherMsg","App","socketIOClient","useState","setMsg","createRef","useEffect","on","data","prev","window","scrollTo","document","body","scrollHeight","disconnect","Fragment","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.da1f6820.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport classes from '../App.module.scss';\r\n\r\nfunction ModalComp({ visible, user, modalRef, inputRef, socket, setUser, setVisible }) {\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle=\"Please type your name\"\r\n\t\t\tvisible={visible}\r\n\t\t\tstyle={{ zIndex: 99999999999999 }}\r\n\t\t\tmaskClosable={false}\r\n\t\t\tclosable={false}\r\n\t\t\tfooter={null}\r\n\t\t>\r\n\t\t\t<div className=\"d-flex flex-column align-items-center\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={classes.modalInput}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={user}\r\n\t\t\t\t\tonChange={(e) => setUser(e.target.value)}\r\n\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\tref={modalRef}\r\n\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter' && user.length > 0) {\r\n\t\t\t\t\t\t\tsetVisible(false);\r\n\t\t\t\t\t\t\tinputRef.current.focus();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={`${classes.modalBtn} mt-3`}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetVisible(false);\r\n\t\t\t\t\t\tinputRef.current.focus();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={user.length < 1}\r\n\t\t\t\t>\r\n\t\t\t\t\tJoin Chat\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default ModalComp;\r\n","import React from 'react';\r\nimport classes from '../App.module.scss';\r\n\r\nfunction InputComp({ input, inputRef, socket, setInput, user }) {\r\n\treturn (\r\n\t\t<div className={classes.input}>\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tstyle={{ width: '80%' }}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName={classes.inputMsg}\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\tif (e.key === 'Enter' && input.length > 0) {\r\n\t\t\t\t\t\tsocket.emit('msg', { user: user, msg: input });\r\n\t\t\t\t\t\tsetInput('');\r\n\t\t\t\t\t\tinputRef.current.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tonChange={(e) => setInput(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={classes.inputBtn}\r\n\t\t\t\tstyle={{ width: '20%' }}\r\n\t\t\t\tdisabled={input.length < 1}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsocket.emit('msg', { user: user, msg: input });\r\n\t\t\t\t\tsetInput('');\r\n\t\t\t\t\tinputRef.current.focus();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tSend\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default InputComp;\r\n","import React from 'react';\r\nimport classes from '../App.module.scss';\r\n\r\nfunction Messages({ msg, user }) {\r\n\treturn (\r\n\t\t<div style={{ paddingBottom: '3.7em' }}>\r\n\t\t\t{msg.map((each, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={classes.messages} key={index}>\r\n\t\t\t\t\t\t<p className={`${each.user === user ? `${classes.user} ml-auto` : `${classes.other} mr-auto`}`}>\r\n\t\t\t\t\t\t\t{each.user}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\tclassName={`${each.user === user\r\n\t\t\t\t\t\t\t\t? `${classes.userMsg} ml-auto`\r\n\t\t\t\t\t\t\t\t: `${classes.otherMsg} mr-auto`}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{each.msg}\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, createRef } from 'react';\nimport socketIOClient from 'socket.io-client';\n\n// Components\nimport ModalComp from './components/ModalComp';\nimport InputComp from './components/InputComp';\nimport Messages from './components/Messages';\n\nfunction App() {\n\tconst socket = socketIOClient('https://chat-public-app.herokuapp.com/');\n\tconst [ msg, setMsg ] = useState([]);\n\tconst [ user, setUser ] = useState('');\n\tconst [ input, setInput ] = useState('');\n\tconst [ visible, setVisible ] = useState(true);\n\n\tconst inputRef = createRef();\n\tconst modalRef = createRef();\n\n\tuseEffect(() => {\n\t\tmodalRef.current.focus();\n\n\t\tsocket.on('msgToGroup', (data) => {\n\t\t\tsetMsg((prev) => [ ...prev, { user: data.user, msg: data.msg } ]);\n\t\t\twindow.scrollTo(0, document.body.scrollHeight);\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ModalComp\n\t\t\t\tinputRef={inputRef}\n\t\t\t\tmodalRef={modalRef}\n\t\t\t\tvisible={visible}\n\t\t\t\tsocket={socket}\n\t\t\t\tsetUser={setUser}\n\t\t\t\tuser={user}\n\t\t\t\tsetVisible={setVisible}\n\t\t\t/>\n\t\t\t<Messages msg={msg} user={user} />\n\t\t\t<InputComp input={input} inputRef={inputRef} socket={socket} setInput={setInput} user={user} />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.min.css';\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"App_messages__2qXdw\",\"user\":\"App_user__27DXa\",\"userMsg\":\"App_userMsg__2BLwL\",\"other\":\"App_other__Ad2A2\",\"otherMsg\":\"App_otherMsg__2PWA1\",\"input\":\"App_input__uNqHM\",\"inputMsg\":\"App_inputMsg__2dVm_\",\"inputBtn\":\"App_inputBtn__1zzcf\",\"modalInput\":\"App_modalInput__1QYT0\",\"modalBtn\":\"App_modalBtn__24Ytd\"};"],"sourceRoot":""}